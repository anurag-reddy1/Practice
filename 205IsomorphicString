import java.util.HashMap;

public class IsomorphicOptimized {

	static boolean isomorphic(String s, String t) {
		
		HashMap<Character,Character> map=new HashMap<>();
		/*String check="";
		for(int i=0;i<s.length();i++){
			char a=s.charAt(i);
			char b =t.charAt(i);
			if(!map.containsKey(a)&&!map.containsValue(b))
				map.put(a, b);
			check=check+map.get(a);
		}
		if(check.equals(t))
			return true;	*/
		
		for(int i=0;i<s.length();i++) {
			char a=s.charAt(i);
			char b=t.charAt(i);
			if(map.containsKey(a))
			{
				if(!map.get(a).equals(b)) {
					return false;}
			}
			else
			{
				if(map.containsValue(b))
					return false;
			}
			map.put(a, b);
		}
			
	return true;
	}
	
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		String s="mnz";
		String t="add";
		System.out.println(isomorphic(s,t));
	}

}
